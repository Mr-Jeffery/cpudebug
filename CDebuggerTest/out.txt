Token: <`, RANGE>
Token: <include, ID>
Token: <definitions, ID>
Token: <v, ID>
Token: <`, RANGE>
Token: <timescale, ID>
Token: </, OPN>
Token: <module, KEY>
Token: <top, ID>
Token: <(, RANGE>
Token: <input, KEY>
Token: <clk_raw, ID>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <,, RANGE>
Token: <input, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <SWITCH_CNT, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <switch_map, ID>
Token: <,, RANGE>
Token: <input, KEY>
Token: <uart_rx, ID>
Token: <,, RANGE>
Token: <input, KEY>
Token: <[, RANGE>
Token: <3, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <row_in, ID>
Token: <,, RANGE>
Token: <output, KEY>
Token: <[, RANGE>
Token: <3, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <col_out, ID>
Token: <,, RANGE>
Token: <output, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <SEGMENT_CNT, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <seg_tube, ID>
Token: <,, RANGE>
Token: <output, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <DIGIT_CNT, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <seg_enable, ID>
Token: <,, RANGE>
Token: <output, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <VGA_BIT_DEPTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <vga_signal, ID>
Token: <,, RANGE>
Token: <output, KEY>
Token: <uart_in_progress, ID>
Token: <,, RANGE>
Token: <output, KEY>
Token: <digit_overflow_9th, ID>
Token: <,, RANGE>
Token: <output, KEY>
Token: <digit_overflow_10th, ID>
Token: <,, RANGE>
Token: <output, KEY>
Token: <hsync, ID>
Token: <,, RANGE>
Token: <vsync, ID>
Token: <,, RANGE>
Token: <output, KEY>
Token: <uart_tx, ID>
Token: <), RANGE>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <clk_cpu, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <clk_vga, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <clk_uart, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <clk_tube, ID>
Token: <;, RANGE>
Token: <clk_generator, ID>
Token: <#, RANGE>
Token: <(, RANGE>
Token: <`, RANGE>
Token: <CPU_DELAY_PERIOD, ID>
Token: <), RANGE>
Token: <cpu_clk_generator, ID>
Token: <(, RANGE>
Token: <clk_raw, ID>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <,, RANGE>
Token: <clk_cpu, ID>
Token: <), RANGE>
Token: <;, RANGE>
Token: <clk_generator, ID>
Token: <#, RANGE>
Token: <(, RANGE>
Token: <`, RANGE>
Token: <VGA_DELAY_PERIOD, ID>
Token: <), RANGE>
Token: <vga_clk_generator, ID>
Token: <(, RANGE>
Token: <clk_raw, ID>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <,, RANGE>
Token: <clk_vga, ID>
Token: <), RANGE>
Token: <;, RANGE>
Token: <clk_generator, ID>
Token: <#, RANGE>
Token: <(, RANGE>
Token: <`, RANGE>
Token: <UART_DELAY_PERIOD, ID>
Token: <), RANGE>
Token: <uart_clk_generator, ID>
Token: <(, RANGE>
Token: <clk_raw, ID>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <,, RANGE>
Token: <clk_uart, ID>
Token: <), RANGE>
Token: <;, RANGE>
Token: <clk_generator, ID>
Token: <#, RANGE>
Token: <(, RANGE>
Token: <`, RANGE>
Token: <TUBE_DELAY_PERIOD, ID>
Token: <), RANGE>
Token: <tube_clk_generator, ID>
Token: <(, RANGE>
Token: <clk_raw, ID>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <,, RANGE>
Token: <clk_tube, ID>
Token: <), RANGE>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <instruction_mem_no_op, ID>
Token: <,, RANGE>
Token: <if_id_reg_no_op, ID>
Token: <,, RANGE>
Token: <id_ex_reg_no_op, ID>
Token: <,, RANGE>
Token: <ex_mem_reg_no_op, ID>
Token: <,, RANGE>
Token: <mem_wb_reg_no_op, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <instruction_mem_instruction, ID>
Token: <,, RANGE>
Token: <if_id_reg_instruction, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <op_code, ID>
Token: <if_id_reg_instruction, ID>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <FUNC_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <func_code, ID>
Token: <if_id_reg_instruction, ID>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <FUNC_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <IMMEDIATE_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <immediate, ID>
Token: <if_id_reg_instruction, ID>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <IMMEDIATE_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <SHIFT_AMOUNT_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <shift_amount, ID>
Token: <if_id_reg_instruction, ID>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <(, RANGE>
Token: <3, CONS>
Token: <*, OPN>
Token: <`, RANGE>
Token: <REG_FILE_ADDR_WIDTH, ID>
Token: <), RANGE>
Token: <-, OPN>
Token: <:, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <(, RANGE>
Token: <3, CONS>
Token: <*, OPN>
Token: <`, RANGE>
Token: <REG_FILE_ADDR_WIDTH, ID>
Token: <), RANGE>
Token: <-, OPN>
Token: <`, RANGE>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <REG_FILE_ADDR_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <rs, ID>
Token: <if_id_reg_instruction, ID>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <:, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <,, RANGE>
Token: <rt, ID>
Token: <if_id_reg_instruction, ID>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <REG_FILE_ADDR_WIDTH, ID>
Token: <-, OPN>
Token: <:, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <(, RANGE>
Token: <2, CONS>
Token: <*, OPN>
Token: <`, RANGE>
Token: <REG_FILE_ADDR_WIDTH, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rd, ID>
Token: <if_id_reg_instruction, ID>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <(, RANGE>
Token: <2, CONS>
Token: <*, OPN>
Token: <`, RANGE>
Token: <REG_FILE_ADDR_WIDTH, ID>
Token: <), RANGE>
Token: <-, OPN>
Token: <:, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <`, RANGE>
Token: <OP_CODE_WIDTH, ID>
Token: <-, OPN>
Token: <(, RANGE>
Token: <3, CONS>
Token: <*, OPN>
Token: <`, RANGE>
Token: <REG_FILE_ADDR_WIDTH, ID>
Token: <), RANGE>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <instruction_mem_pc, ID>
Token: <,, RANGE>
Token: <if_id_reg_pc, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <reg_file_reg_1_data, ID>
Token: <,, RANGE>
Token: <reg_file_reg_2_data, ID>
Token: <,, RANGE>
Token: <id_ex_reg_store_data, ID>
Token: <,, RANGE>
Token: <ex_mem_reg_store_data, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <sign_extend_result, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <mux_operand_1, ID>
Token: <,, RANGE>
Token: <mux_operand_2, ID>
Token: <,, RANGE>
Token: <id_ex_reg_operand_1, ID>
Token: <,, RANGE>
Token: <id_ex_reg_operand_2, ID>
Token: <,, RANGE>
Token: <mux_pc_overload_value, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <REG_FILE_ADDR_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <mux_reg_1_idx, ID>
Token: <,, RANGE>
Token: <mux_reg_2_idx, ID>
Token: <,, RANGE>
Token: <id_ex_reg_reg_1_idx, ID>
Token: <,, RANGE>
Token: <id_ex_reg_reg_2_idx, ID>
Token: <,, RANGE>
Token: <mux_reg_dest_idx, ID>
Token: <,, RANGE>
Token: <id_ex_reg_reg_dest_idx, ID>
Token: <,, RANGE>
Token: <ex_mem_reg_reg_dest_idx, ID>
Token: <,, RANGE>
Token: <mem_wb_reg_reg_dest_idx, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <mux_pc_offset, ID>
Token: <,, RANGE>
Token: <mux_pc_overload, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ALU_CONTROL_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <control_alu_op_code, ID>
Token: <,, RANGE>
Token: <id_ex_reg_alu_op_code, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <COND_TYPE_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <control_condition_type, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <control_mem_control, ID>
Token: <,, RANGE>
Token: <id_ex_reg_mem_control, ID>
Token: <,, RANGE>
Token: <ex_mem_reg_mem_control, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <mem_wb_reg_mem_read_enable, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <control_reg_write_enable, ID>
Token: <,, RANGE>
Token: <id_ex_reg_reg_write_enable, ID>
Token: <,, RANGE>
Token: <ex_mem_reg_reg_write_enable, ID>
Token: <,, RANGE>
Token: <mem_wb_reg_reg_write_enable, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <i_type_instruction, ID>
Token: <,, RANGE>
Token: <r_type_instruction, ID>
Token: <,, RANGE>
Token: <j_instruction, ID>
Token: <,, RANGE>
Token: <jr_instruction, ID>
Token: <,, RANGE>
Token: <jal_instruction, ID>
Token: <,, RANGE>
Token: <branch_instruction, ID>
Token: <,, RANGE>
Token: <store_instruction, ID>
Token: <,, RANGE>
Token: <shift_instruction, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <condition_check_satisfied, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <alu_alu_result, ID>
Token: <,, RANGE>
Token: <ex_mem_reg_alu_result, ID>
Token: <,, RANGE>
Token: <mem_wb_reg_alu_result, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <FORW_SEL_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <forwarding_oeprand_1_data_selection, ID>
Token: <,, RANGE>
Token: <forwarding_oeprand_2_data_selection, ID>
Token: <,, RANGE>
Token: <forwarding_store_data_selection, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <data_mem_read_data, ID>
Token: <,, RANGE>
Token: <mem_wb_reg_read_data, ID>
Token: <,, RANGE>
Token: <data_mem_vga_store_data, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <data_mem_input_select, ID>
Token: <,, RANGE>
Token: <data_mem_input_enable, ID>
Token: <,, RANGE>
Token: <data_mem_vga_write_enable, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <reg_write_select_reg_write_data, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <HAZD_CTL_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <hazard_unit_if_hazard_control, ID>
Token: <,, RANGE>
Token: <hazard_unit_id_hazard_control, ID>
Token: <,, RANGE>
Token: <hazard_unit_ex_hazard_control, ID>
Token: <,, RANGE>
Token: <hazard_unit_mem_hazard_control, ID>
Token: <,, RANGE>
Token: <hazard_unit_wb_hazard_control, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISSUE_TYPE_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <hazard_unit_issue_type, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <hazard_unit_pc_reset, ID>
Token: <,, RANGE>
Token: <hazard_unit_uart_disable, ID>
Token: <,, RANGE>
Token: <hazard_unit_ignore_no_op, ID>
Token: <,, RANGE>
Token: <hazard_unit_ignore_pause, ID>
Token: <,, RANGE>
Token: <hazard_unit_tube_enable, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <input_unit_keypad_data, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <DIGIT_CNT, ID>
Token: <*, OPN>
Token: <`, RANGE>
Token: <DIGIT_RADIX_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <input_unit_keypad_digits, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <input_unit_input_complete, ID>
Token: <,, RANGE>
Token: <input_unit_switch_enable, ID>
Token: <,, RANGE>
Token: <input_unit_cpu_pause, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <COORDINATE_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <vga_unit_x, ID>
Token: <,, RANGE>
Token: <vga_unit_y, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <vga_unit_display_en, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <7, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <keypad_unit_key_coord, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <uart_unit_clk_out, ID>
Token: <,, RANGE>
Token: <uart_unit_write_enable, ID>
Token: <,, RANGE>
Token: <uart_unit_uart_complete, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <ISA_WIDTH, ID>
Token: <-, OPN>
Token: <1, CONS>
Token: <:, RANGE>
Token: <0, CONS>
Token: <uart_unit_write_data, ID>
Token: <;, RANGE>
Token: <wire, KEY>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <RAM_DEPTH, ID>
Token: <:, RANGE>
Token: <0, CONS>
Token: <uart_unit_write_address, ID>
Token: <;, RANGE>
Token: <assign, KEY>
Token: <uart_in_progress, ID>
Token: <hazard_unit_uart_disable, ID>
Token: <1, CONS>
Token: <b0, ID>
Token: <:, RANGE>
Token: <1, CONS>
Token: <b1, ID>
Token: <;, RANGE>
Token: <forwarding_unit, ID>
Token: <forwarding_unit, ID>
Token: <(, RANGE>
Token: <ex_reg_1_idx, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_1_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_reg_2_idx, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_2_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_wb_en, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_no_op, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_wb_en, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_no_op, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <operand_1_select, ID>
Token: <(, RANGE>
Token: <forwarding_oeprand_1_data_selection, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <operand_2_select, ID>
Token: <(, RANGE>
Token: <forwarding_oeprand_2_data_selection, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <store_data_select, ID>
Token: <(, RANGE>
Token: <forwarding_store_data_selection, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <hazard_unit, ID>
Token: <hazard_unit, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_cpu, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_complete, ID>
Token: <(, RANGE>
Token: <uart_unit_uart_complete, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_write_enable, ID>
Token: <(, RANGE>
Token: <uart_unit_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_disable, ID>
Token: <(, RANGE>
Token: <hazard_unit_uart_disable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <branch_instruction, ID>
Token: <(, RANGE>
Token: <branch_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <store_instruction, ID>
Token: <(, RANGE>
Token: <store_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <if_no_op, ID>
Token: <(, RANGE>
Token: <instruction_mem_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_no_op, ID>
Token: <(, RANGE>
Token: <if_id_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_mem_read_enable, ID>
Token: <(, RANGE>
Token: <id_ex_reg_mem_control, ID>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <MEM_READ_BIT, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_reg_write_enable, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_no_op, ID>
Token: <(, RANGE>
Token: <id_ex_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_reg_write_enable, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_no_op, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_1_idx, ID>
Token: <(, RANGE>
Token: <mux_reg_1_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_2_idx, ID>
Token: <(, RANGE>
Token: <mux_reg_2_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <mux_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc, ID>
Token: <(, RANGE>
Token: <instruction_mem_pc, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <input_enable, ID>
Token: <(, RANGE>
Token: <data_mem_input_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <input_complete, ID>
Token: <(, RANGE>
Token: <input_unit_input_complete, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <cpu_pause, ID>
Token: <(, RANGE>
Token: <input_unit_cpu_pause, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ignore_pause, ID>
Token: <(, RANGE>
Token: <hazard_unit_ignore_pause, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_reset, ID>
Token: <(, RANGE>
Token: <hazard_unit_pc_reset, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <if_hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_if_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_id_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_ex_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_mem_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_wb_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ignore_no_op, ID>
Token: <(, RANGE>
Token: <hazard_unit_ignore_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <tube_enable, ID>
Token: <(, RANGE>
Token: <hazard_unit_tube_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <issue_type, ID>
Token: <(, RANGE>
Token: <hazard_unit_issue_type, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <instruction_mem, ID>
Token: <instruction_mem, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_cpu, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_disable, ID>
Token: <(, RANGE>
Token: <hazard_unit_uart_disable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_clk, ID>
Token: <(, RANGE>
Token: <uart_unit_clk_out, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_write_enable, ID>
Token: <(, RANGE>
Token: <uart_unit_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_data, ID>
Token: <(, RANGE>
Token: <uart_unit_write_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_addr, ID>
Token: <(, RANGE>
Token: <uart_unit_write_address, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_offset, ID>
Token: <(, RANGE>
Token: <mux_pc_offset, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_offset_value, ID>
Token: <(, RANGE>
Token: <mux_operand_2, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_overload, ID>
Token: <(, RANGE>
Token: <mux_pc_overload, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_overload_value, ID>
Token: <(, RANGE>
Token: <mux_pc_overload_value, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_reset, ID>
Token: <(, RANGE>
Token: <hazard_unit_pc_reset, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_if_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <if_no_op, ID>
Token: <(, RANGE>
Token: <instruction_mem_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc, ID>
Token: <(, RANGE>
Token: <instruction_mem_pc, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <instruction, ID>
Token: <(, RANGE>
Token: <instruction_mem_instruction, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <if_id_reg, ID>
Token: <if_id_reg, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_cpu, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_id_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ignore_no_op, ID>
Token: <(, RANGE>
Token: <hazard_unit_ignore_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <if_no_op, ID>
Token: <(, RANGE>
Token: <instruction_mem_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_no_op, ID>
Token: <(, RANGE>
Token: <if_id_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <if_pc, ID>
Token: <(, RANGE>
Token: <instruction_mem_pc, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_pc, ID>
Token: <(, RANGE>
Token: <if_id_reg_pc, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <if_instruction, ID>
Token: <(, RANGE>
Token: <instruction_mem_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_instruction, ID>
Token: <(, RANGE>
Token: <if_id_reg_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_offset, ID>
Token: <(, RANGE>
Token: <mux_pc_offset, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_overload, ID>
Token: <(, RANGE>
Token: <mux_pc_overload, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <register_file, ID>
Token: <register_file, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_cpu, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <read_reg_addr_1, ID>
Token: <(, RANGE>
Token: <rs, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <read_reg_addr_2, ID>
Token: <(, RANGE>
Token: <rt, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <write_reg_addr, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <write_data, ID>
Token: <(, RANGE>
Token: <reg_write_select_reg_write_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <write_en, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_no_op, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <read_data_1, ID>
Token: <(, RANGE>
Token: <reg_file_reg_1_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <read_data_2, ID>
Token: <(, RANGE>
Token: <reg_file_reg_2_data, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <condition_check, ID>
Token: <condition_check, ID>
Token: <(, RANGE>
Token: <condition_type, ID>
Token: <(, RANGE>
Token: <control_condition_type, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <read_data_1, ID>
Token: <(, RANGE>
Token: <reg_file_reg_1_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <read_data_2, ID>
Token: <(, RANGE>
Token: <reg_file_reg_2_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <condition_satisfied, ID>
Token: <(, RANGE>
Token: <condition_check_satisfied, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <sign_extend, ID>
Token: <sign_extend, ID>
Token: <(, RANGE>
Token: <in, ID>
Token: <(, RANGE>
Token: <immediate, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <out, ID>
Token: <(, RANGE>
Token: <sign_extend_result, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <control, ID>
Token: <control, ID>
Token: <(, RANGE>
Token: <opcode, ID>
Token: <(, RANGE>
Token: <op_code, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <func, ID>
Token: <(, RANGE>
Token: <func_code, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <alu_opcode, ID>
Token: <(, RANGE>
Token: <control_alu_op_code, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_control, ID>
Token: <(, RANGE>
Token: <control_mem_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <i_type_instruction, ID>
Token: <(, RANGE>
Token: <i_type_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <r_type_instruction, ID>
Token: <(, RANGE>
Token: <r_type_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <j_instruction, ID>
Token: <(, RANGE>
Token: <j_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <jr_instruction, ID>
Token: <(, RANGE>
Token: <jr_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <jal_instruction, ID>
Token: <(, RANGE>
Token: <jal_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <branch_instruction, ID>
Token: <(, RANGE>
Token: <branch_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <store_instruction, ID>
Token: <(, RANGE>
Token: <store_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <shift_instruction, ID>
Token: <(, RANGE>
Token: <shift_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_en, ID>
Token: <(, RANGE>
Token: <control_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <condition_type, ID>
Token: <(, RANGE>
Token: <control_condition_type, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <signal_mux, ID>
Token: <signal_mux, ID>
Token: <(, RANGE>
Token: <i_type_instruction, ID>
Token: <(, RANGE>
Token: <i_type_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <r_type_instruction, ID>
Token: <(, RANGE>
Token: <r_type_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <j_instruction, ID>
Token: <(, RANGE>
Token: <j_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <jr_instruction, ID>
Token: <(, RANGE>
Token: <jr_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <jal_instruction, ID>
Token: <(, RANGE>
Token: <jal_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <branch_instruction, ID>
Token: <(, RANGE>
Token: <branch_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <shift_instruction, ID>
Token: <(, RANGE>
Token: <shift_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <condition_satisfied, ID>
Token: <(, RANGE>
Token: <condition_check_satisfied, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_no_op, ID>
Token: <(, RANGE>
Token: <if_id_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_offset, ID>
Token: <(, RANGE>
Token: <mux_pc_offset, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_overload, ID>
Token: <(, RANGE>
Token: <mux_pc_overload, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_1, ID>
Token: <(, RANGE>
Token: <reg_file_reg_1_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_pc, ID>
Token: <(, RANGE>
Token: <if_id_reg_pc, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <shift_amount, ID>
Token: <(, RANGE>
Token: <shift_amount, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_operand_1, ID>
Token: <(, RANGE>
Token: <mux_operand_1, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_2, ID>
Token: <(, RANGE>
Token: <reg_file_reg_2_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_sign_extend_result, ID>
Token: <(, RANGE>
Token: <sign_extend_result, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_operand_2, ID>
Token: <(, RANGE>
Token: <mux_operand_2, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_instruction, ID>
Token: <(, RANGE>
Token: <if_id_reg_instruction, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <pc_overload_value, ID>
Token: <(, RANGE>
Token: <mux_pc_overload_value, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_1_idx, ID>
Token: <(, RANGE>
Token: <rs, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_2_idx, ID>
Token: <(, RANGE>
Token: <rt, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <rd, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_reg_1_idx, ID>
Token: <(, RANGE>
Token: <mux_reg_1_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_reg_2_idx, ID>
Token: <(, RANGE>
Token: <mux_reg_2_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <mux_reg_dest_idx, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <id_ex_reg, ID>
Token: <id_ex_reg, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_cpu, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_ex_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ignore_no_op, ID>
Token: <(, RANGE>
Token: <hazard_unit_ignore_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_no_op, ID>
Token: <(, RANGE>
Token: <if_id_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_no_op, ID>
Token: <(, RANGE>
Token: <id_ex_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_write_enable, ID>
Token: <(, RANGE>
Token: <control_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_reg_write_enable, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_mem_control, ID>
Token: <(, RANGE>
Token: <control_mem_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_mem_control, ID>
Token: <(, RANGE>
Token: <id_ex_reg_mem_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_alu_control, ID>
Token: <(, RANGE>
Token: <control_alu_op_code, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_alu_control, ID>
Token: <(, RANGE>
Token: <id_ex_reg_alu_op_code, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_operand_1, ID>
Token: <(, RANGE>
Token: <mux_operand_1, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_operand_1, ID>
Token: <(, RANGE>
Token: <id_ex_reg_operand_1, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_operand_2, ID>
Token: <(, RANGE>
Token: <mux_operand_2, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_operand_2, ID>
Token: <(, RANGE>
Token: <id_ex_reg_operand_2, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <id_reg_2, ID>
Token: <(, RANGE>
Token: <reg_file_reg_2_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_store_data, ID>
Token: <(, RANGE>
Token: <id_ex_reg_store_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_reg_1_idx, ID>
Token: <(, RANGE>
Token: <mux_reg_1_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_reg_2_idx, ID>
Token: <(, RANGE>
Token: <mux_reg_2_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mux_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <mux_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_reg_1_idx, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_1_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_reg_2_idx, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_2_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_reg_dest_idx, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <alu, ID>
Token: <alu, ID>
Token: <(, RANGE>
Token: <alu_opcode, ID>
Token: <(, RANGE>
Token: <id_ex_reg_alu_op_code, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <alu_result, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_alu_result, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <reg_write_data, ID>
Token: <(, RANGE>
Token: <reg_write_select_reg_write_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <val1_sel, ID>
Token: <(, RANGE>
Token: <forwarding_oeprand_1_data_selection, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <val2_sel, ID>
Token: <(, RANGE>
Token: <forwarding_oeprand_2_data_selection, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <a_input, ID>
Token: <(, RANGE>
Token: <id_ex_reg_operand_1, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <b_input, ID>
Token: <(, RANGE>
Token: <id_ex_reg_operand_2, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <alu_output, ID>
Token: <(, RANGE>
Token: <alu_alu_result, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <ex_mem_reg, ID>
Token: <ex_mem_reg, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_cpu, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_mem_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ignore_no_op, ID>
Token: <(, RANGE>
Token: <hazard_unit_ignore_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_no_op, ID>
Token: <(, RANGE>
Token: <id_ex_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_no_op, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_reg_write_enable, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_reg_write_enable, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_mem_control, ID>
Token: <(, RANGE>
Token: <id_ex_reg_mem_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_mem_control, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_mem_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_alu_result, ID>
Token: <(, RANGE>
Token: <alu_alu_result, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_alu_result, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_alu_result, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <store_data_select, ID>
Token: <(, RANGE>
Token: <forwarding_store_data_selection, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_store_data, ID>
Token: <(, RANGE>
Token: <id_ex_reg_store_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_reg_write_data, ID>
Token: <(, RANGE>
Token: <reg_write_select_reg_write_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_store_data, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_store_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ex_dest_reg_idx, ID>
Token: <(, RANGE>
Token: <id_ex_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_dest_reg_idx, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <data_mem, ID>
Token: <data_mem, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_cpu, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_disable, ID>
Token: <(, RANGE>
Token: <hazard_unit_uart_disable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_clk, ID>
Token: <(, RANGE>
Token: <uart_unit_clk_out, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_write_enable, ID>
Token: <(, RANGE>
Token: <uart_unit_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_data, ID>
Token: <(, RANGE>
Token: <uart_unit_write_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_addr, ID>
Token: <(, RANGE>
Token: <uart_unit_write_address, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <no_op, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_control, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_mem_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_addr, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_alu_result, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_store_data, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_store_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_read_data, ID>
Token: <(, RANGE>
Token: <data_mem_read_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <input_select, ID>
Token: <(, RANGE>
Token: <data_mem_input_select, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <input_enable, ID>
Token: <(, RANGE>
Token: <data_mem_input_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <vga_write_enable, ID>
Token: <(, RANGE>
Token: <data_mem_vga_write_enable, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <mem_wb_reg, ID>
Token: <mem_wb_reg, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_cpu, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <hazard_control, ID>
Token: <(, RANGE>
Token: <hazard_unit_wb_hazard_control, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ignore_no_op, ID>
Token: <(, RANGE>
Token: <hazard_unit_ignore_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_no_op, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_no_op, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_no_op, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_reg_write_enable, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_reg_write_enable, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_reg_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_mem_read_enable, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_mem_control, ID>
Token: <[, RANGE>
Token: <`, RANGE>
Token: <MEM_READ_BIT, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_mem_read_enable, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_mem_read_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_alu_result, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_alu_result, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_alu_result, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_alu_result, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <input_select, ID>
Token: <(, RANGE>
Token: <data_mem_input_select, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <input_complete, ID>
Token: <(, RANGE>
Token: <input_unit_input_complete, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <switch_enable, ID>
Token: <(, RANGE>
Token: <input_unit_switch_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_mem_read_data, ID>
Token: <(, RANGE>
Token: <data_mem_read_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <keypad_data, ID>
Token: <(, RANGE>
Token: <input_unit_keypad_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <switch_map, ID>
Token: <(, RANGE>
Token: <switch_map, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_mem_read_data, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_read_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <mem_dest_reg_idx, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_dest_reg_idx, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_reg_dest_idx, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <reg_write_select, ID>
Token: <reg_write_select, ID>
Token: <(, RANGE>
Token: <wb_mem_read_enable, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_mem_read_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_alu_result, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_alu_result, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_mem_read_data, ID>
Token: <(, RANGE>
Token: <mem_wb_reg_read_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <wb_result, ID>
Token: <(, RANGE>
Token: <reg_write_select_reg_write_data, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <uart_unit, ID>
Token: <uart_unit, ID>
Token: <(, RANGE>
Token: <clk_uart, ID>
Token: <(, RANGE>
Token: <clk_uart, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_disable, ID>
Token: <(, RANGE>
Token: <hazard_unit_uart_disable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_rx, ID>
Token: <(, RANGE>
Token: <uart_rx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_tx, ID>
Token: <(, RANGE>
Token: <uart_tx, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_clk_out, ID>
Token: <(, RANGE>
Token: <uart_unit_clk_out, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_addr, ID>
Token: <(, RANGE>
Token: <uart_unit_write_address, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_data, ID>
Token: <(, RANGE>
Token: <uart_unit_write_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_write_enable, ID>
Token: <(, RANGE>
Token: <uart_unit_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <uart_complete, ID>
Token: <(, RANGE>
Token: <uart_unit_uart_complete, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <keypad_unit, ID>
Token: <keypad_unit, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_raw, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <row_in, ID>
Token: <(, RANGE>
Token: <row_in, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <col_out, ID>
Token: <(, RANGE>
Token: <col_out, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <key_coord, ID>
Token: <(, RANGE>
Token: <keypad_unit_key_coord, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <input_unit, ID>
Token: <input_unit, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_raw, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <key_coord, ID>
Token: <(, RANGE>
Token: <keypad_unit_key_coord, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <ignore_pause, ID>
Token: <(, RANGE>
Token: <hazard_unit_ignore_pause, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <input_enable, ID>
Token: <(, RANGE>
Token: <data_mem_input_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <input_complete, ID>
Token: <(, RANGE>
Token: <input_unit_input_complete, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <keypad_data, ID>
Token: <(, RANGE>
Token: <input_unit_keypad_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <keypad_digits, ID>
Token: <(, RANGE>
Token: <input_unit_keypad_digits, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <switch_enable, ID>
Token: <(, RANGE>
Token: <input_unit_switch_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <cpu_pause, ID>
Token: <(, RANGE>
Token: <input_unit_cpu_pause, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <overflow_9th, ID>
Token: <(, RANGE>
Token: <digit_overflow_9th, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <overflow_10th, ID>
Token: <(, RANGE>
Token: <digit_overflow_10th, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <seven_seg_unit, ID>
Token: <seven_seg_unit, ID>
Token: <(, RANGE>
Token: <clk_tube, ID>
Token: <(, RANGE>
Token: <clk_tube, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <keypad_digits, ID>
Token: <(, RANGE>
Token: <input_unit_keypad_digits, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <switch_map, ID>
Token: <(, RANGE>
Token: <switch_map, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <switch_enable, ID>
Token: <(, RANGE>
Token: <input_unit_switch_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <tube_enable, ID>
Token: <(, RANGE>
Token: <hazard_unit_tube_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <seg_tube, ID>
Token: <(, RANGE>
Token: <seg_tube, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <seg_enable, ID>
Token: <(, RANGE>
Token: <seg_enable, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <vga_unit, ID>
Token: <vga_unit, ID>
Token: <(, RANGE>
Token: <clk_vga, ID>
Token: <(, RANGE>
Token: <clk_vga, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <hsync, ID>
Token: <(, RANGE>
Token: <hsync, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <vsync, ID>
Token: <(, RANGE>
Token: <vsync, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <display_en, ID>
Token: <(, RANGE>
Token: <vga_unit_display_en, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <x, ID>
Token: <(, RANGE>
Token: <vga_unit_x, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <y, ID>
Token: <(, RANGE>
Token: <vga_unit_y, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
Token: <output_unit, ID>
Token: <output_unit, ID>
Token: <(, RANGE>
Token: <clk, ID>
Token: <(, RANGE>
Token: <clk_raw, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <rst_n, ID>
Token: <(, RANGE>
Token: <rst_n, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <display_en, ID>
Token: <(, RANGE>
Token: <vga_unit_display_en, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <x, ID>
Token: <(, RANGE>
Token: <vga_unit_x, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <y, ID>
Token: <(, RANGE>
Token: <vga_unit_y, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <vga_write_enable, ID>
Token: <(, RANGE>
Token: <data_mem_vga_write_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <vga_store_data, ID>
Token: <(, RANGE>
Token: <ex_mem_reg_store_data, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <issue_type, ID>
Token: <(, RANGE>
Token: <hazard_unit_issue_type, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <switch_enable, ID>
Token: <(, RANGE>
Token: <input_unit_switch_enable, ID>
Token: <), RANGE>
Token: <,, RANGE>
Token: <vga_rgb, ID>
Token: <(, RANGE>
Token: <vga_signal, ID>
Token: <), RANGE>
Token: <), RANGE>
Token: <;, RANGE>
